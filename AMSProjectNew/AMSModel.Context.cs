//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMSProjectNew
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class marketvalDBEntities : DbContext
    {
        public marketvalDBEntities()
            : base("name=marketvalDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AMS_AccessArangementsType> AMS_AccessArangementsType { get; set; }
        public virtual DbSet<AMS_Clients> AMS_Clients { get; set; }
        public virtual DbSet<AMS_ClientsBranchManager> AMS_ClientsBranchManager { get; set; }
        public virtual DbSet<AMS_Compliance> AMS_Compliance { get; set; }
        public virtual DbSet<AMS_EmailHistory> AMS_EmailHistory { get; set; }
        public virtual DbSet<AMS_JobDocuments> AMS_JobDocuments { get; set; }
        public virtual DbSet<AMS_JobEditRequests> AMS_JobEditRequests { get; set; }
        public virtual DbSet<AMS_JobHistory> AMS_JobHistory { get; set; }
        public virtual DbSet<AMS_Jobs> AMS_Jobs { get; set; }
        public virtual DbSet<AMS_JobStatus> AMS_JobStatus { get; set; }
        public virtual DbSet<AMS_Logs> AMS_Logs { get; set; }
        public virtual DbSet<AMS_M_Lookup> AMS_M_Lookup { get; set; }
        public virtual DbSet<AMS_PropertyType> AMS_PropertyType { get; set; }
        public virtual DbSet<AMS_Purpose> AMS_Purpose { get; set; }
        public virtual DbSet<AMS_ReportSectionDocuments> AMS_ReportSectionDocuments { get; set; }
        public virtual DbSet<AMS_Reviewers> AMS_Reviewers { get; set; }
        public virtual DbSet<AMS_ServiceType> AMS_ServiceType { get; set; }
        public virtual DbSet<AMS_SuperAdministrator> AMS_SuperAdministrator { get; set; }
        public virtual DbSet<AMS_Tab1_Summary> AMS_Tab1_Summary { get; set; }
        public virtual DbSet<AMS_Tab2_Land> AMS_Tab2_Land { get; set; }
        public virtual DbSet<AMS_Tab3_BuildingImprovements> AMS_Tab3_BuildingImprovements { get; set; }
        public virtual DbSet<AMS_Tab4_RoomsFixtures> AMS_Tab4_RoomsFixtures { get; set; }
        public virtual DbSet<AMS_Tab5_Areas> AMS_Tab5_Areas { get; set; }
        public virtual DbSet<AMS_Tab6_Comments> AMS_Tab6_Comments { get; set; }
        public virtual DbSet<AMS_Tab7_SalesEvidence> AMS_Tab7_SalesEvidence { get; set; }
        public virtual DbSet<AMS_Tab8_Attachments> AMS_Tab8_Attachments { get; set; }
        public virtual DbSet<AMS_TransactionType> AMS_TransactionType { get; set; }
        public virtual DbSet<AMS_Urgency> AMS_Urgency { get; set; }
        public virtual DbSet<AMS_Users> AMS_Users { get; set; }
        public virtual DbSet<AMS_ValuationCompany> AMS_ValuationCompany { get; set; }
        public virtual DbSet<AMS_ValuationManager> AMS_ValuationManager { get; set; }
        public virtual DbSet<AMS_ValuationType> AMS_ValuationType { get; set; }
        public virtual DbSet<AMS_Valuers> AMS_Valuers { get; set; }
        public virtual DbSet<AMS_Valuers1> AMS_Valuers1 { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<AMS_ReportSections> AMS_ReportSections { get; set; }
    
        public virtual int AMS_AccessArangementsTypeEdit(Nullable<long> id, string accessArangementsTypeName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var accessArangementsTypeNameParameter = accessArangementsTypeName != null ?
                new ObjectParameter("AccessArangementsTypeName", accessArangementsTypeName) :
                new ObjectParameter("AccessArangementsTypeName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_AccessArangementsTypeEdit", idParameter, accessArangementsTypeNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_AccessArangementsTypeSelect_Result> AMS_AccessArangementsTypeSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_AccessArangementsTypeSelect_Result>("AMS_AccessArangementsTypeSelect", idParameter);
        }
    
        public virtual int AMS_ClientsBranchManagerEdit(Nullable<long> id, Nullable<long> userId, Nullable<long> clientId, string email, string firstName, string lastName, string companyName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ClientsBranchManagerEdit", idParameter, userIdParameter, clientIdParameter, emailParameter, firstNameParameter, lastNameParameter, companyNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ClientsBranchManagerSelect_Result> AMS_ClientsBranchManagerSelect(Nullable<long> userId, Nullable<long> clientId, Nullable<long> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ClientsBranchManagerSelect_Result>("AMS_ClientsBranchManagerSelect", userIdParameter, clientIdParameter, createdByParameter);
        }
    
        public virtual int AMS_ClientsEdit(Nullable<long> id, Nullable<long> userId, string clientType, string email, string firstName, string lastName, string companyName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, string aBN, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var clientTypeParameter = clientType != null ?
                new ObjectParameter("ClientType", clientType) :
                new ObjectParameter("ClientType", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var aBNParameter = aBN != null ?
                new ObjectParameter("ABN", aBN) :
                new ObjectParameter("ABN", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ClientsEdit", idParameter, userIdParameter, clientTypeParameter, emailParameter, firstNameParameter, lastNameParameter, companyNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, aBNParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ClientsSelect_Result> AMS_ClientsSelect(Nullable<long> userId, string clientType, Nullable<long> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var clientTypeParameter = clientType != null ?
                new ObjectParameter("ClientType", clientType) :
                new ObjectParameter("ClientType", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ClientsSelect_Result>("AMS_ClientsSelect", userIdParameter, clientTypeParameter, createdByParameter);
        }
    
        public virtual int AMS_ComplianceEdit(Nullable<long> id, Nullable<long> userId, string email, string firstName, string lastName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ComplianceEdit", idParameter, userIdParameter, emailParameter, firstNameParameter, lastNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ComplianceSelect_Result> AMS_ComplianceSelect(Nullable<long> userId, Nullable<long> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ComplianceSelect_Result>("AMS_ComplianceSelect", userIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<AMS_EmailConfirmationofValuersAppointmentDetails_Result> AMS_EmailConfirmationofValuersAppointmentDetails(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_EmailConfirmationofValuersAppointmentDetails_Result>("AMS_EmailConfirmationofValuersAppointmentDetails", jobIdParameter);
        }
    
        public virtual int AMS_EmailHistoryEdit(Nullable<long> id, Nullable<long> jobId, Nullable<long> userId, string emailType, string toEmail, string subject, string fromEmail, string replyTo, string emailFile, string iPAddress, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var emailTypeParameter = emailType != null ?
                new ObjectParameter("EmailType", emailType) :
                new ObjectParameter("EmailType", typeof(string));
    
            var toEmailParameter = toEmail != null ?
                new ObjectParameter("ToEmail", toEmail) :
                new ObjectParameter("ToEmail", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var fromEmailParameter = fromEmail != null ?
                new ObjectParameter("FromEmail", fromEmail) :
                new ObjectParameter("FromEmail", typeof(string));
    
            var replyToParameter = replyTo != null ?
                new ObjectParameter("ReplyTo", replyTo) :
                new ObjectParameter("ReplyTo", typeof(string));
    
            var emailFileParameter = emailFile != null ?
                new ObjectParameter("EmailFile", emailFile) :
                new ObjectParameter("EmailFile", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_EmailHistoryEdit", idParameter, jobIdParameter, userIdParameter, emailTypeParameter, toEmailParameter, subjectParameter, fromEmailParameter, replyToParameter, emailFileParameter, iPAddressParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_EmailHistorySelect_Result> AMS_EmailHistorySelect(Nullable<long> id, Nullable<long> jobId, Nullable<long> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_EmailHistorySelect_Result>("AMS_EmailHistorySelect", idParameter, jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<AMS_getCustomlist_Result> AMS_getCustomlist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_getCustomlist_Result>("AMS_getCustomlist");
        }
    
        public virtual ObjectResult<AMS_getlist_Result> AMS_getlist(string listCode)
        {
            var listCodeParameter = listCode != null ?
                new ObjectParameter("ListCode", listCode) :
                new ObjectParameter("ListCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_getlist_Result>("AMS_getlist", listCodeParameter);
        }
    
        public virtual int AMS_JobAppointmentSetEdit(Nullable<long> jobId, Nullable<System.DateTime> appointmentDate, Nullable<System.DateTime> inspectedOn, Nullable<long> status, string option, string inspectedEmailSendToClient, string appointmentSetTime)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var appointmentDateParameter = appointmentDate.HasValue ?
                new ObjectParameter("AppointmentDate", appointmentDate) :
                new ObjectParameter("AppointmentDate", typeof(System.DateTime));
    
            var inspectedOnParameter = inspectedOn.HasValue ?
                new ObjectParameter("InspectedOn", inspectedOn) :
                new ObjectParameter("InspectedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var inspectedEmailSendToClientParameter = inspectedEmailSendToClient != null ?
                new ObjectParameter("InspectedEmailSendToClient", inspectedEmailSendToClient) :
                new ObjectParameter("InspectedEmailSendToClient", typeof(string));
    
            var appointmentSetTimeParameter = appointmentSetTime != null ?
                new ObjectParameter("AppointmentSetTime", appointmentSetTime) :
                new ObjectParameter("AppointmentSetTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobAppointmentSetEdit", jobIdParameter, appointmentDateParameter, inspectedOnParameter, statusParameter, optionParameter, inspectedEmailSendToClientParameter, appointmentSetTimeParameter);
        }
    
        public virtual int AMS_JobDeleteByJobId(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobDeleteByJobId", jobIdParameter);
        }
    
        public virtual int AMS_JobDocumentsEdit(Nullable<long> id, Nullable<long> jobId, string documentName, string option)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobDocumentsEdit", idParameter, jobIdParameter, documentNameParameter, optionParameter);
        }
    
        public virtual ObjectResult<AMS_JobDocumentsSelect_Result> AMS_JobDocumentsSelect(Nullable<long> id, Nullable<long> jobId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobDocumentsSelect_Result>("AMS_JobDocumentsSelect", idParameter, jobIdParameter);
        }
    
        public virtual int AMS_JobEditFinalReportGenerate(Nullable<long> jobId, string reportUpload, Nullable<long> status)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var reportUploadParameter = reportUpload != null ?
                new ObjectParameter("ReportUpload", reportUpload) :
                new ObjectParameter("ReportUpload", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobEditFinalReportGenerate", jobIdParameter, reportUploadParameter, statusParameter);
        }
    
        public virtual int AMS_JobEditFinalReportSubmit(Nullable<long> jobId, string reportUpload, string accountUpload, string fieldNoteUpload, Nullable<long> status, string option)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var reportUploadParameter = reportUpload != null ?
                new ObjectParameter("ReportUpload", reportUpload) :
                new ObjectParameter("ReportUpload", typeof(string));
    
            var accountUploadParameter = accountUpload != null ?
                new ObjectParameter("AccountUpload", accountUpload) :
                new ObjectParameter("AccountUpload", typeof(string));
    
            var fieldNoteUploadParameter = fieldNoteUpload != null ?
                new ObjectParameter("FieldNoteUpload", fieldNoteUpload) :
                new ObjectParameter("FieldNoteUpload", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobEditFinalReportSubmit", jobIdParameter, reportUploadParameter, accountUploadParameter, fieldNoteUploadParameter, statusParameter, optionParameter);
        }
    
        public virtual int AMS_JobEditReject(Nullable<long> id, Nullable<long> jobId, Nullable<long> userId, Nullable<long> status, Nullable<decimal> newFee, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var newFeeParameter = newFee.HasValue ?
                new ObjectParameter("NewFee", newFee) :
                new ObjectParameter("NewFee", typeof(decimal));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobEditReject", idParameter, jobIdParameter, userIdParameter, statusParameter, newFeeParameter, optionParameter, retVal);
        }
    
        public virtual int AMS_JobEditRequestsEdit(Nullable<long> id, Nullable<long> jobId, string requestTitle, string requestDetails, string createdByName, string createdByType, Nullable<long> createdById, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var requestTitleParameter = requestTitle != null ?
                new ObjectParameter("RequestTitle", requestTitle) :
                new ObjectParameter("RequestTitle", typeof(string));
    
            var requestDetailsParameter = requestDetails != null ?
                new ObjectParameter("RequestDetails", requestDetails) :
                new ObjectParameter("RequestDetails", typeof(string));
    
            var createdByNameParameter = createdByName != null ?
                new ObjectParameter("CreatedByName", createdByName) :
                new ObjectParameter("CreatedByName", typeof(string));
    
            var createdByTypeParameter = createdByType != null ?
                new ObjectParameter("CreatedByType", createdByType) :
                new ObjectParameter("CreatedByType", typeof(string));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobEditRequestsEdit", idParameter, jobIdParameter, requestTitleParameter, requestDetailsParameter, createdByNameParameter, createdByTypeParameter, createdByIdParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_JobEditRequestsSelect_Result> AMS_JobEditRequestsSelect(Nullable<long> id, Nullable<long> jobId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobEditRequestsSelect_Result>("AMS_JobEditRequestsSelect", idParameter, jobIdParameter);
        }
    
        public virtual int AMS_JobHistoryEdit(Nullable<long> id, Nullable<long> jobId, Nullable<long> userId, string title, string comment, string historyType, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var historyTypeParameter = historyType != null ?
                new ObjectParameter("HistoryType", historyType) :
                new ObjectParameter("HistoryType", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobHistoryEdit", idParameter, jobIdParameter, userIdParameter, titleParameter, commentParameter, historyTypeParameter, optionParameter, retVal);
        }
    
        public virtual int AMS_JobsDocumentEdit(Nullable<long> jobId, string documentName, string option)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsDocumentEdit", jobIdParameter, documentNameParameter, optionParameter);
        }
    
        public virtual int AMS_JobsEdit(Nullable<long> jobId, Nullable<long> clientId, Nullable<long> userId, Nullable<long> instructedBy, Nullable<long> preparedFor, string loanReference, string customerFullName, string customerPhoneNumber, string customerMobilePhoneNumber, string customerAdditionalPhoneNumber, Nullable<long> accessArangementsVia, string nameOfPersonToContactForAccess, string phoneNumber, string mobilePhoneNumber, string additionalPhoneNumber, string additionalNotes, string unitLot, string streetNumber, string streetName, string streetType, string suburb, string postcode, string priorJobreference, string contractPrice, Nullable<System.DateTime> contractDate, string estimatedPrice, Nullable<long> serviceType, Nullable<long> valuationType, Nullable<long> propertyType, Nullable<long> purpose, Nullable<long> transactionType, Nullable<long> urgency, string quoteFee, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal, string emailAddress, string clientName, string createdByType, string state, string clientAddress, string emailAddress1, string valuationInstruction, string propertyReport, string overlays, string title)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var instructedByParameter = instructedBy.HasValue ?
                new ObjectParameter("InstructedBy", instructedBy) :
                new ObjectParameter("InstructedBy", typeof(long));
    
            var preparedForParameter = preparedFor.HasValue ?
                new ObjectParameter("PreparedFor", preparedFor) :
                new ObjectParameter("PreparedFor", typeof(long));
    
            var loanReferenceParameter = loanReference != null ?
                new ObjectParameter("LoanReference", loanReference) :
                new ObjectParameter("LoanReference", typeof(string));
    
            var customerFullNameParameter = customerFullName != null ?
                new ObjectParameter("CustomerFullName", customerFullName) :
                new ObjectParameter("CustomerFullName", typeof(string));
    
            var customerPhoneNumberParameter = customerPhoneNumber != null ?
                new ObjectParameter("CustomerPhoneNumber", customerPhoneNumber) :
                new ObjectParameter("CustomerPhoneNumber", typeof(string));
    
            var customerMobilePhoneNumberParameter = customerMobilePhoneNumber != null ?
                new ObjectParameter("CustomerMobilePhoneNumber", customerMobilePhoneNumber) :
                new ObjectParameter("CustomerMobilePhoneNumber", typeof(string));
    
            var customerAdditionalPhoneNumberParameter = customerAdditionalPhoneNumber != null ?
                new ObjectParameter("CustomerAdditionalPhoneNumber", customerAdditionalPhoneNumber) :
                new ObjectParameter("CustomerAdditionalPhoneNumber", typeof(string));
    
            var accessArangementsViaParameter = accessArangementsVia.HasValue ?
                new ObjectParameter("AccessArangementsVia", accessArangementsVia) :
                new ObjectParameter("AccessArangementsVia", typeof(long));
    
            var nameOfPersonToContactForAccessParameter = nameOfPersonToContactForAccess != null ?
                new ObjectParameter("NameOfPersonToContactForAccess", nameOfPersonToContactForAccess) :
                new ObjectParameter("NameOfPersonToContactForAccess", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var additionalPhoneNumberParameter = additionalPhoneNumber != null ?
                new ObjectParameter("AdditionalPhoneNumber", additionalPhoneNumber) :
                new ObjectParameter("AdditionalPhoneNumber", typeof(string));
    
            var additionalNotesParameter = additionalNotes != null ?
                new ObjectParameter("AdditionalNotes", additionalNotes) :
                new ObjectParameter("AdditionalNotes", typeof(string));
    
            var unitLotParameter = unitLot != null ?
                new ObjectParameter("UnitLot", unitLot) :
                new ObjectParameter("UnitLot", typeof(string));
    
            var streetNumberParameter = streetNumber != null ?
                new ObjectParameter("StreetNumber", streetNumber) :
                new ObjectParameter("StreetNumber", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var streetTypeParameter = streetType != null ?
                new ObjectParameter("StreetType", streetType) :
                new ObjectParameter("StreetType", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var priorJobreferenceParameter = priorJobreference != null ?
                new ObjectParameter("PriorJobreference", priorJobreference) :
                new ObjectParameter("PriorJobreference", typeof(string));
    
            var contractPriceParameter = contractPrice != null ?
                new ObjectParameter("ContractPrice", contractPrice) :
                new ObjectParameter("ContractPrice", typeof(string));
    
            var contractDateParameter = contractDate.HasValue ?
                new ObjectParameter("ContractDate", contractDate) :
                new ObjectParameter("ContractDate", typeof(System.DateTime));
    
            var estimatedPriceParameter = estimatedPrice != null ?
                new ObjectParameter("EstimatedPrice", estimatedPrice) :
                new ObjectParameter("EstimatedPrice", typeof(string));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(long));
    
            var valuationTypeParameter = valuationType.HasValue ?
                new ObjectParameter("ValuationType", valuationType) :
                new ObjectParameter("ValuationType", typeof(long));
    
            var propertyTypeParameter = propertyType.HasValue ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(long));
    
            var purposeParameter = purpose.HasValue ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(long));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(long));
    
            var urgencyParameter = urgency.HasValue ?
                new ObjectParameter("Urgency", urgency) :
                new ObjectParameter("Urgency", typeof(long));
    
            var quoteFeeParameter = quoteFee != null ?
                new ObjectParameter("QuoteFee", quoteFee) :
                new ObjectParameter("QuoteFee", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var createdByTypeParameter = createdByType != null ?
                new ObjectParameter("CreatedByType", createdByType) :
                new ObjectParameter("CreatedByType", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("ClientAddress", clientAddress) :
                new ObjectParameter("ClientAddress", typeof(string));
    
            var emailAddress1Parameter = emailAddress1 != null ?
                new ObjectParameter("EmailAddress1", emailAddress1) :
                new ObjectParameter("EmailAddress1", typeof(string));
    
            var valuationInstructionParameter = valuationInstruction != null ?
                new ObjectParameter("ValuationInstruction", valuationInstruction) :
                new ObjectParameter("ValuationInstruction", typeof(string));
    
            var propertyReportParameter = propertyReport != null ?
                new ObjectParameter("PropertyReport", propertyReport) :
                new ObjectParameter("PropertyReport", typeof(string));
    
            var overlaysParameter = overlays != null ?
                new ObjectParameter("Overlays", overlays) :
                new ObjectParameter("Overlays", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEdit", jobIdParameter, clientIdParameter, userIdParameter, instructedByParameter, preparedForParameter, loanReferenceParameter, customerFullNameParameter, customerPhoneNumberParameter, customerMobilePhoneNumberParameter, customerAdditionalPhoneNumberParameter, accessArangementsViaParameter, nameOfPersonToContactForAccessParameter, phoneNumberParameter, mobilePhoneNumberParameter, additionalPhoneNumberParameter, additionalNotesParameter, unitLotParameter, streetNumberParameter, streetNameParameter, streetTypeParameter, suburbParameter, postcodeParameter, priorJobreferenceParameter, contractPriceParameter, contractDateParameter, estimatedPriceParameter, serviceTypeParameter, valuationTypeParameter, propertyTypeParameter, purposeParameter, transactionTypeParameter, urgencyParameter, quoteFeeParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal, emailAddressParameter, clientNameParameter, createdByTypeParameter, stateParameter, clientAddressParameter, emailAddress1Parameter, valuationInstructionParameter, propertyReportParameter, overlaysParameter, titleParameter);
        }
    
        public virtual int AMS_JobsEditAssignToReviewer(Nullable<long> jobId, Nullable<long> reviewerId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var reviewerIdParameter = reviewerId.HasValue ?
                new ObjectParameter("ReviewerId", reviewerId) :
                new ObjectParameter("ReviewerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEditAssignToReviewer", jobIdParameter, reviewerIdParameter);
        }
    
        public virtual int AMS_JobsEditAssignToValuationCompany(Nullable<long> jobId, Nullable<long> valuationCompanyAssignedId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var valuationCompanyAssignedIdParameter = valuationCompanyAssignedId.HasValue ?
                new ObjectParameter("ValuationCompanyAssignedId", valuationCompanyAssignedId) :
                new ObjectParameter("ValuationCompanyAssignedId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEditAssignToValuationCompany", jobIdParameter, valuationCompanyAssignedIdParameter);
        }
    
        public virtual int AMS_JobsEditAssignToValuer(Nullable<long> jobId, Nullable<long> valuerId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var valuerIdParameter = valuerId.HasValue ?
                new ObjectParameter("ValuerId", valuerId) :
                new ObjectParameter("ValuerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEditAssignToValuer", jobIdParameter, valuerIdParameter);
        }
    
        public virtual int AMS_JobsEditIsClientReportEdit(Nullable<long> jobId, Nullable<int> isClientReportEdit)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var isClientReportEditParameter = isClientReportEdit.HasValue ?
                new ObjectParameter("IsClientReportEdit", isClientReportEdit) :
                new ObjectParameter("IsClientReportEdit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEditIsClientReportEdit", jobIdParameter, isClientReportEditParameter);
        }
    
        public virtual int AMS_JobsEditPaymentStatusCompleted(Nullable<long> jobId, string paymentStatus)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEditPaymentStatusCompleted", jobIdParameter, paymentStatusParameter);
        }
    
        public virtual int AMS_JobsEditReAssignToValuationCompany(Nullable<long> jobId, Nullable<long> valuationCompanyAssignedId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var valuationCompanyAssignedIdParameter = valuationCompanyAssignedId.HasValue ?
                new ObjectParameter("ValuationCompanyAssignedId", valuationCompanyAssignedId) :
                new ObjectParameter("ValuationCompanyAssignedId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsEditReAssignToValuationCompany", jobIdParameter, valuationCompanyAssignedIdParameter);
        }
    
        public virtual ObjectResult<AMS_JobsHistorySelectByJobId_Result> AMS_JobsHistorySelectByJobId(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsHistorySelectByJobId_Result>("AMS_JobsHistorySelectByJobId", jobIdParameter);
        }
    
        public virtual int AMS_JobsOtherNoteEdit(Nullable<long> jobId, string otherNote)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var otherNoteParameter = otherNote != null ?
                new ObjectParameter("OtherNote", otherNote) :
                new ObjectParameter("OtherNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsOtherNoteEdit", jobIdParameter, otherNoteParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelect_Result> AMS_JobsSelect(Nullable<long> createdBy, string status)
        {
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelect_Result>("AMS_JobsSelect", createdByParameter, statusParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectByJobId_Result> AMS_JobsSelectByJobId(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectByJobId_Result>("AMS_JobsSelectByJobId", jobIdParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectByJobIdForEdit_Result> AMS_JobsSelectByJobIdForEdit(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectByJobIdForEdit_Result>("AMS_JobsSelectByJobIdForEdit", jobIdParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectForClient_Result> AMS_JobsSelectForClient(Nullable<long> createdBy, string status)
        {
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectForClient_Result>("AMS_JobsSelectForClient", createdByParameter, statusParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectForReviewers_Result> AMS_JobsSelectForReviewers(Nullable<long> reviewerId, string status)
        {
            var reviewerIdParameter = reviewerId.HasValue ?
                new ObjectParameter("ReviewerId", reviewerId) :
                new ObjectParameter("ReviewerId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectForReviewers_Result>("AMS_JobsSelectForReviewers", reviewerIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectForValuationCompany_Result> AMS_JobsSelectForValuationCompany(Nullable<long> valuationCompanyAssignedId, string status)
        {
            var valuationCompanyAssignedIdParameter = valuationCompanyAssignedId.HasValue ?
                new ObjectParameter("ValuationCompanyAssignedId", valuationCompanyAssignedId) :
                new ObjectParameter("ValuationCompanyAssignedId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectForValuationCompany_Result>("AMS_JobsSelectForValuationCompany", valuationCompanyAssignedIdParameter, statusParameter);
        }
    
        public virtual int AMS_JobsSelectForValuationManager(string status, string isEditRequest, string jobId, string street, string client, string suburb, string valuerId, Nullable<int> purposeId)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isEditRequestParameter = isEditRequest != null ?
                new ObjectParameter("IsEditRequest", isEditRequest) :
                new ObjectParameter("IsEditRequest", typeof(string));
    
            var jobIdParameter = jobId != null ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var clientParameter = client != null ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var valuerIdParameter = valuerId != null ?
                new ObjectParameter("ValuerId", valuerId) :
                new ObjectParameter("ValuerId", typeof(string));
    
            var purposeIdParameter = purposeId.HasValue ?
                new ObjectParameter("PurposeId", purposeId) :
                new ObjectParameter("PurposeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobsSelectForValuationManager", statusParameter, isEditRequestParameter, jobIdParameter, streetParameter, clientParameter, suburbParameter, valuerIdParameter, purposeIdParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectForValuationManagerDownloadClients_Result> AMS_JobsSelectForValuationManagerDownloadClients(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectForValuationManagerDownloadClients_Result>("AMS_JobsSelectForValuationManagerDownloadClients", statusParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectForValuationManagerDownloadReports_Result> AMS_JobsSelectForValuationManagerDownloadReports(string start, string end, string status)
        {
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectForValuationManagerDownloadReports_Result>("AMS_JobsSelectForValuationManagerDownloadReports", startParameter, endParameter, statusParameter);
        }
    
        public virtual ObjectResult<AMS_JobsSelectForValuers_Result> AMS_JobsSelectForValuers(Nullable<long> valuerId, string status)
        {
            var valuerIdParameter = valuerId.HasValue ?
                new ObjectParameter("ValuerId", valuerId) :
                new ObjectParameter("ValuerId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsSelectForValuers_Result>("AMS_JobsSelectForValuers", valuerIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<AMS_JobsStatusSelect_Result> AMS_JobsStatusSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_JobsStatusSelect_Result>("AMS_JobsStatusSelect");
        }
    
        public virtual int AMS_JobStatusEdit(Nullable<long> jobId, Nullable<long> status)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_JobStatusEdit", jobIdParameter, statusParameter);
        }
    
        public virtual int AMS_LogsUpdate(string title, string logDetails)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var logDetailsParameter = logDetails != null ?
                new ObjectParameter("LogDetails", logDetails) :
                new ObjectParameter("LogDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_LogsUpdate", titleParameter, logDetailsParameter);
        }
    
        public virtual int AMS_lookup(Nullable<long> lookupId, string type, string name, string option, ObjectParameter retVal)
        {
            var lookupIdParameter = lookupId.HasValue ?
                new ObjectParameter("LookupId", lookupId) :
                new ObjectParameter("LookupId", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_lookup", lookupIdParameter, typeParameter, nameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_Lookupselect_Result> AMS_Lookupselect(Nullable<long> lookupId)
        {
            var lookupIdParameter = lookupId.HasValue ?
                new ObjectParameter("LookupId", lookupId) :
                new ObjectParameter("LookupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Lookupselect_Result>("AMS_Lookupselect", lookupIdParameter);
        }
    
        public virtual int AMS_PropertyTypeEdit(Nullable<long> id, string propertyTypeName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var propertyTypeNameParameter = propertyTypeName != null ?
                new ObjectParameter("PropertyTypeName", propertyTypeName) :
                new ObjectParameter("PropertyTypeName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_PropertyTypeEdit", idParameter, propertyTypeNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_PropertyTypeSelect_Result> AMS_PropertyTypeSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_PropertyTypeSelect_Result>("AMS_PropertyTypeSelect", idParameter);
        }
    
        public virtual int AMS_PurposeEdit(Nullable<long> id, string purposeName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var purposeNameParameter = purposeName != null ?
                new ObjectParameter("PurposeName", purposeName) :
                new ObjectParameter("PurposeName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_PurposeEdit", idParameter, purposeNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_PurposeSelect_Result> AMS_PurposeSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_PurposeSelect_Result>("AMS_PurposeSelect", idParameter);
        }
    
        public virtual int AMS_ReviewersEdit(Nullable<long> id, Nullable<long> userId, Nullable<long> valuationCompanyId, string email, string firstName, string lastName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var valuationCompanyIdParameter = valuationCompanyId.HasValue ?
                new ObjectParameter("ValuationCompanyId", valuationCompanyId) :
                new ObjectParameter("ValuationCompanyId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ReviewersEdit", idParameter, userIdParameter, valuationCompanyIdParameter, emailParameter, firstNameParameter, lastNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ReviewersSelect_Result> AMS_ReviewersSelect(Nullable<long> userId, Nullable<long> valuationCompanyId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var valuationCompanyIdParameter = valuationCompanyId.HasValue ?
                new ObjectParameter("ValuationCompanyId", valuationCompanyId) :
                new ObjectParameter("ValuationCompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ReviewersSelect_Result>("AMS_ReviewersSelect", userIdParameter, valuationCompanyIdParameter);
        }
    
        public virtual int AMS_ServiceTypeEdit(Nullable<long> id, string serviceTypeName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var serviceTypeNameParameter = serviceTypeName != null ?
                new ObjectParameter("ServiceTypeName", serviceTypeName) :
                new ObjectParameter("ServiceTypeName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ServiceTypeEdit", idParameter, serviceTypeNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ServiceTypeSelect_Result> AMS_ServiceTypeSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ServiceTypeSelect_Result>("AMS_ServiceTypeSelect", idParameter);
        }
    
        public virtual int AMS_SuperAdministratorEdit(Nullable<long> id, Nullable<long> userId, string email, string firstName, string lastName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal, string username, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_SuperAdministratorEdit", idParameter, userIdParameter, emailParameter, firstNameParameter, lastNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal, usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<AMS_SuperAdministratorSelect_Result> AMS_SuperAdministratorSelect(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_SuperAdministratorSelect_Result>("AMS_SuperAdministratorSelect", userIdParameter);
        }
    
        public virtual int AMS_Tab1_SummaryEdit(Nullable<long> jobId, string marketValue, string unitLot, string streetNumber, string streetName, string streetType, string suburb, string postcode, string state, string purpose, string instructedBy, Nullable<System.DateTime> inspectionDate, Nullable<System.DateTime> valuationsDate, string valueComponent, Nullable<long> createdBy, string option, ObjectParameter retVal, string landValue, string improvements, string client, string instructions, Nullable<int> valuationApproach)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var marketValueParameter = marketValue != null ?
                new ObjectParameter("MarketValue", marketValue) :
                new ObjectParameter("MarketValue", typeof(string));
    
            var unitLotParameter = unitLot != null ?
                new ObjectParameter("UnitLot", unitLot) :
                new ObjectParameter("UnitLot", typeof(string));
    
            var streetNumberParameter = streetNumber != null ?
                new ObjectParameter("StreetNumber", streetNumber) :
                new ObjectParameter("StreetNumber", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var streetTypeParameter = streetType != null ?
                new ObjectParameter("StreetType", streetType) :
                new ObjectParameter("StreetType", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var instructedByParameter = instructedBy != null ?
                new ObjectParameter("InstructedBy", instructedBy) :
                new ObjectParameter("InstructedBy", typeof(string));
    
            var inspectionDateParameter = inspectionDate.HasValue ?
                new ObjectParameter("InspectionDate", inspectionDate) :
                new ObjectParameter("InspectionDate", typeof(System.DateTime));
    
            var valuationsDateParameter = valuationsDate.HasValue ?
                new ObjectParameter("ValuationsDate", valuationsDate) :
                new ObjectParameter("ValuationsDate", typeof(System.DateTime));
    
            var valueComponentParameter = valueComponent != null ?
                new ObjectParameter("ValueComponent", valueComponent) :
                new ObjectParameter("ValueComponent", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var landValueParameter = landValue != null ?
                new ObjectParameter("LandValue", landValue) :
                new ObjectParameter("LandValue", typeof(string));
    
            var improvementsParameter = improvements != null ?
                new ObjectParameter("Improvements", improvements) :
                new ObjectParameter("Improvements", typeof(string));
    
            var clientParameter = client != null ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(string));
    
            var instructionsParameter = instructions != null ?
                new ObjectParameter("Instructions", instructions) :
                new ObjectParameter("Instructions", typeof(string));
    
            var valuationApproachParameter = valuationApproach.HasValue ?
                new ObjectParameter("ValuationApproach", valuationApproach) :
                new ObjectParameter("ValuationApproach", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab1_SummaryEdit", jobIdParameter, marketValueParameter, unitLotParameter, streetNumberParameter, streetNameParameter, streetTypeParameter, suburbParameter, postcodeParameter, stateParameter, purposeParameter, instructedByParameter, inspectionDateParameter, valuationsDateParameter, valueComponentParameter, createdByParameter, optionParameter, retVal, landValueParameter, improvementsParameter, clientParameter, instructionsParameter, valuationApproachParameter);
        }
    
        public virtual ObjectResult<AMS_Tab1_SummarySelect_Result> AMS_Tab1_SummarySelect(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab1_SummarySelect_Result>("AMS_Tab1_SummarySelect", jobIdParameter);
        }
    
        public virtual int AMS_Tab2_LandEdit(Nullable<long> jobId, string propertyType, string propertyIdentification, string titleSearch, string lotNumber, string planNumber, string volume, string folio, string registeredProprietors, string encumbrances, string siteArea, string localGovernmentArea, string zoning, string overlays, string zoningEffect, string shops, string transport, string schools, string cBD, string siteLayout, string services, string environmentalHazards, string pestInfestation, Nullable<long> createdBy, string option, ObjectParameter retVal, string sqmHectares, string planTitle)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var propertyTypeParameter = propertyType != null ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(string));
    
            var propertyIdentificationParameter = propertyIdentification != null ?
                new ObjectParameter("PropertyIdentification", propertyIdentification) :
                new ObjectParameter("PropertyIdentification", typeof(string));
    
            var titleSearchParameter = titleSearch != null ?
                new ObjectParameter("TitleSearch", titleSearch) :
                new ObjectParameter("TitleSearch", typeof(string));
    
            var lotNumberParameter = lotNumber != null ?
                new ObjectParameter("LotNumber", lotNumber) :
                new ObjectParameter("LotNumber", typeof(string));
    
            var planNumberParameter = planNumber != null ?
                new ObjectParameter("PlanNumber", planNumber) :
                new ObjectParameter("PlanNumber", typeof(string));
    
            var volumeParameter = volume != null ?
                new ObjectParameter("Volume", volume) :
                new ObjectParameter("Volume", typeof(string));
    
            var folioParameter = folio != null ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(string));
    
            var registeredProprietorsParameter = registeredProprietors != null ?
                new ObjectParameter("RegisteredProprietors", registeredProprietors) :
                new ObjectParameter("RegisteredProprietors", typeof(string));
    
            var encumbrancesParameter = encumbrances != null ?
                new ObjectParameter("Encumbrances", encumbrances) :
                new ObjectParameter("Encumbrances", typeof(string));
    
            var siteAreaParameter = siteArea != null ?
                new ObjectParameter("SiteArea", siteArea) :
                new ObjectParameter("SiteArea", typeof(string));
    
            var localGovernmentAreaParameter = localGovernmentArea != null ?
                new ObjectParameter("LocalGovernmentArea", localGovernmentArea) :
                new ObjectParameter("LocalGovernmentArea", typeof(string));
    
            var zoningParameter = zoning != null ?
                new ObjectParameter("Zoning", zoning) :
                new ObjectParameter("Zoning", typeof(string));
    
            var overlaysParameter = overlays != null ?
                new ObjectParameter("Overlays", overlays) :
                new ObjectParameter("Overlays", typeof(string));
    
            var zoningEffectParameter = zoningEffect != null ?
                new ObjectParameter("ZoningEffect", zoningEffect) :
                new ObjectParameter("ZoningEffect", typeof(string));
    
            var shopsParameter = shops != null ?
                new ObjectParameter("Shops", shops) :
                new ObjectParameter("Shops", typeof(string));
    
            var transportParameter = transport != null ?
                new ObjectParameter("Transport", transport) :
                new ObjectParameter("Transport", typeof(string));
    
            var schoolsParameter = schools != null ?
                new ObjectParameter("Schools", schools) :
                new ObjectParameter("Schools", typeof(string));
    
            var cBDParameter = cBD != null ?
                new ObjectParameter("CBD", cBD) :
                new ObjectParameter("CBD", typeof(string));
    
            var siteLayoutParameter = siteLayout != null ?
                new ObjectParameter("SiteLayout", siteLayout) :
                new ObjectParameter("SiteLayout", typeof(string));
    
            var servicesParameter = services != null ?
                new ObjectParameter("Services", services) :
                new ObjectParameter("Services", typeof(string));
    
            var environmentalHazardsParameter = environmentalHazards != null ?
                new ObjectParameter("EnvironmentalHazards", environmentalHazards) :
                new ObjectParameter("EnvironmentalHazards", typeof(string));
    
            var pestInfestationParameter = pestInfestation != null ?
                new ObjectParameter("PestInfestation", pestInfestation) :
                new ObjectParameter("PestInfestation", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var sqmHectaresParameter = sqmHectares != null ?
                new ObjectParameter("SqmHectares", sqmHectares) :
                new ObjectParameter("SqmHectares", typeof(string));
    
            var planTitleParameter = planTitle != null ?
                new ObjectParameter("PlanTitle", planTitle) :
                new ObjectParameter("PlanTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab2_LandEdit", jobIdParameter, propertyTypeParameter, propertyIdentificationParameter, titleSearchParameter, lotNumberParameter, planNumberParameter, volumeParameter, folioParameter, registeredProprietorsParameter, encumbrancesParameter, siteAreaParameter, localGovernmentAreaParameter, zoningParameter, overlaysParameter, zoningEffectParameter, shopsParameter, transportParameter, schoolsParameter, cBDParameter, siteLayoutParameter, servicesParameter, environmentalHazardsParameter, pestInfestationParameter, createdByParameter, optionParameter, retVal, sqmHectaresParameter, planTitleParameter);
        }
    
        public virtual ObjectResult<AMS_Tab2_LandSelect_Result> AMS_Tab2_LandSelect(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab2_LandSelect_Result>("AMS_Tab2_LandSelect", jobIdParameter);
        }
    
        public virtual int AMS_Tab3_BuildingImprovementsEdit(Nullable<long> jobId, string propertyType, string propertyStyle, string yearBuilt, string externalWalls, string roof, string interiorLinings, string mainFlooring, string windowFrames, string internalCondition, string externalCondition, string streetAppeal, string pergolaVerandah, string shedding, string pools, string gardens, string fencing, string drivewayPaving, string outbuildings, Nullable<long> createdBy, string option, ObjectParameter retVal, string ancillaryImprovements)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var propertyTypeParameter = propertyType != null ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(string));
    
            var propertyStyleParameter = propertyStyle != null ?
                new ObjectParameter("PropertyStyle", propertyStyle) :
                new ObjectParameter("PropertyStyle", typeof(string));
    
            var yearBuiltParameter = yearBuilt != null ?
                new ObjectParameter("YearBuilt", yearBuilt) :
                new ObjectParameter("YearBuilt", typeof(string));
    
            var externalWallsParameter = externalWalls != null ?
                new ObjectParameter("ExternalWalls", externalWalls) :
                new ObjectParameter("ExternalWalls", typeof(string));
    
            var roofParameter = roof != null ?
                new ObjectParameter("Roof", roof) :
                new ObjectParameter("Roof", typeof(string));
    
            var interiorLiningsParameter = interiorLinings != null ?
                new ObjectParameter("InteriorLinings", interiorLinings) :
                new ObjectParameter("InteriorLinings", typeof(string));
    
            var mainFlooringParameter = mainFlooring != null ?
                new ObjectParameter("MainFlooring", mainFlooring) :
                new ObjectParameter("MainFlooring", typeof(string));
    
            var windowFramesParameter = windowFrames != null ?
                new ObjectParameter("WindowFrames", windowFrames) :
                new ObjectParameter("WindowFrames", typeof(string));
    
            var internalConditionParameter = internalCondition != null ?
                new ObjectParameter("InternalCondition", internalCondition) :
                new ObjectParameter("InternalCondition", typeof(string));
    
            var externalConditionParameter = externalCondition != null ?
                new ObjectParameter("ExternalCondition", externalCondition) :
                new ObjectParameter("ExternalCondition", typeof(string));
    
            var streetAppealParameter = streetAppeal != null ?
                new ObjectParameter("StreetAppeal", streetAppeal) :
                new ObjectParameter("StreetAppeal", typeof(string));
    
            var pergolaVerandahParameter = pergolaVerandah != null ?
                new ObjectParameter("PergolaVerandah", pergolaVerandah) :
                new ObjectParameter("PergolaVerandah", typeof(string));
    
            var sheddingParameter = shedding != null ?
                new ObjectParameter("Shedding", shedding) :
                new ObjectParameter("Shedding", typeof(string));
    
            var poolsParameter = pools != null ?
                new ObjectParameter("Pools", pools) :
                new ObjectParameter("Pools", typeof(string));
    
            var gardensParameter = gardens != null ?
                new ObjectParameter("Gardens", gardens) :
                new ObjectParameter("Gardens", typeof(string));
    
            var fencingParameter = fencing != null ?
                new ObjectParameter("Fencing", fencing) :
                new ObjectParameter("Fencing", typeof(string));
    
            var drivewayPavingParameter = drivewayPaving != null ?
                new ObjectParameter("DrivewayPaving", drivewayPaving) :
                new ObjectParameter("DrivewayPaving", typeof(string));
    
            var outbuildingsParameter = outbuildings != null ?
                new ObjectParameter("Outbuildings", outbuildings) :
                new ObjectParameter("Outbuildings", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var ancillaryImprovementsParameter = ancillaryImprovements != null ?
                new ObjectParameter("AncillaryImprovements", ancillaryImprovements) :
                new ObjectParameter("AncillaryImprovements", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab3_BuildingImprovementsEdit", jobIdParameter, propertyTypeParameter, propertyStyleParameter, yearBuiltParameter, externalWallsParameter, roofParameter, interiorLiningsParameter, mainFlooringParameter, windowFramesParameter, internalConditionParameter, externalConditionParameter, streetAppealParameter, pergolaVerandahParameter, sheddingParameter, poolsParameter, gardensParameter, fencingParameter, drivewayPavingParameter, outbuildingsParameter, createdByParameter, optionParameter, retVal, ancillaryImprovementsParameter);
        }
    
        public virtual ObjectResult<AMS_Tab3_BuildingImprovementsSelect_Result> AMS_Tab3_BuildingImprovementsSelect(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab3_BuildingImprovementsSelect_Result>("AMS_Tab3_BuildingImprovementsSelect", jobIdParameter);
        }
    
        public virtual int AMS_Tab4_RoomsFixturesEdit(Nullable<long> jobId, string rooms1, string rooms2, string rooms3, string rooms4, string bedroom, string bathroom, string ensuite, string toilet, string laundry, string text1, string heatingCooling, Nullable<long> createdBy, string option, ObjectParameter retVal)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var rooms1Parameter = rooms1 != null ?
                new ObjectParameter("Rooms1", rooms1) :
                new ObjectParameter("Rooms1", typeof(string));
    
            var rooms2Parameter = rooms2 != null ?
                new ObjectParameter("Rooms2", rooms2) :
                new ObjectParameter("Rooms2", typeof(string));
    
            var rooms3Parameter = rooms3 != null ?
                new ObjectParameter("Rooms3", rooms3) :
                new ObjectParameter("Rooms3", typeof(string));
    
            var rooms4Parameter = rooms4 != null ?
                new ObjectParameter("Rooms4", rooms4) :
                new ObjectParameter("Rooms4", typeof(string));
    
            var bedroomParameter = bedroom != null ?
                new ObjectParameter("Bedroom", bedroom) :
                new ObjectParameter("Bedroom", typeof(string));
    
            var bathroomParameter = bathroom != null ?
                new ObjectParameter("Bathroom", bathroom) :
                new ObjectParameter("Bathroom", typeof(string));
    
            var ensuiteParameter = ensuite != null ?
                new ObjectParameter("Ensuite", ensuite) :
                new ObjectParameter("Ensuite", typeof(string));
    
            var toiletParameter = toilet != null ?
                new ObjectParameter("Toilet", toilet) :
                new ObjectParameter("Toilet", typeof(string));
    
            var laundryParameter = laundry != null ?
                new ObjectParameter("Laundry", laundry) :
                new ObjectParameter("Laundry", typeof(string));
    
            var text1Parameter = text1 != null ?
                new ObjectParameter("Text1", text1) :
                new ObjectParameter("Text1", typeof(string));
    
            var heatingCoolingParameter = heatingCooling != null ?
                new ObjectParameter("HeatingCooling", heatingCooling) :
                new ObjectParameter("HeatingCooling", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab4_RoomsFixturesEdit", jobIdParameter, rooms1Parameter, rooms2Parameter, rooms3Parameter, rooms4Parameter, bedroomParameter, bathroomParameter, ensuiteParameter, toiletParameter, laundryParameter, text1Parameter, heatingCoolingParameter, createdByParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_Tab4_RoomsFixturesSelect_Result> AMS_Tab4_RoomsFixturesSelect(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab4_RoomsFixturesSelect_Result>("AMS_Tab4_RoomsFixturesSelect", jobIdParameter);
        }
    
        public virtual int AMS_Tab5_AreasEdit(Nullable<long> jobId, string livingArea, string alfresco, string balcony, string pergola, string verandah, string garage, string carport, string carSpaces, Nullable<long> createdBy, string option, ObjectParameter retVal, string sqmEq)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var livingAreaParameter = livingArea != null ?
                new ObjectParameter("LivingArea", livingArea) :
                new ObjectParameter("LivingArea", typeof(string));
    
            var alfrescoParameter = alfresco != null ?
                new ObjectParameter("Alfresco", alfresco) :
                new ObjectParameter("Alfresco", typeof(string));
    
            var balconyParameter = balcony != null ?
                new ObjectParameter("Balcony", balcony) :
                new ObjectParameter("Balcony", typeof(string));
    
            var pergolaParameter = pergola != null ?
                new ObjectParameter("Pergola", pergola) :
                new ObjectParameter("Pergola", typeof(string));
    
            var verandahParameter = verandah != null ?
                new ObjectParameter("Verandah", verandah) :
                new ObjectParameter("Verandah", typeof(string));
    
            var garageParameter = garage != null ?
                new ObjectParameter("Garage", garage) :
                new ObjectParameter("Garage", typeof(string));
    
            var carportParameter = carport != null ?
                new ObjectParameter("Carport", carport) :
                new ObjectParameter("Carport", typeof(string));
    
            var carSpacesParameter = carSpaces != null ?
                new ObjectParameter("CarSpaces", carSpaces) :
                new ObjectParameter("CarSpaces", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var sqmEqParameter = sqmEq != null ?
                new ObjectParameter("SqmEq", sqmEq) :
                new ObjectParameter("SqmEq", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab5_AreasEdit", jobIdParameter, livingAreaParameter, alfrescoParameter, balconyParameter, pergolaParameter, verandahParameter, garageParameter, carportParameter, carSpacesParameter, createdByParameter, optionParameter, retVal, sqmEqParameter);
        }
    
        public virtual ObjectResult<AMS_Tab5_AreasSelect_Result> AMS_Tab5_AreasSelect(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab5_AreasSelect_Result>("AMS_Tab5_AreasSelect", jobIdParameter);
        }
    
        public virtual int AMS_Tab6_CommentsEdit(Nullable<long> jobId, string instructions, string standard, string defects, string methodology, Nullable<long> createdBy, string option, ObjectParameter retVal, string closing, string lastSaleofProperty)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var instructionsParameter = instructions != null ?
                new ObjectParameter("Instructions", instructions) :
                new ObjectParameter("Instructions", typeof(string));
    
            var standardParameter = standard != null ?
                new ObjectParameter("Standard", standard) :
                new ObjectParameter("Standard", typeof(string));
    
            var defectsParameter = defects != null ?
                new ObjectParameter("Defects", defects) :
                new ObjectParameter("Defects", typeof(string));
    
            var methodologyParameter = methodology != null ?
                new ObjectParameter("Methodology", methodology) :
                new ObjectParameter("Methodology", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var closingParameter = closing != null ?
                new ObjectParameter("Closing", closing) :
                new ObjectParameter("Closing", typeof(string));
    
            var lastSaleofPropertyParameter = lastSaleofProperty != null ?
                new ObjectParameter("LastSaleofProperty", lastSaleofProperty) :
                new ObjectParameter("LastSaleofProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab6_CommentsEdit", jobIdParameter, instructionsParameter, standardParameter, defectsParameter, methodologyParameter, createdByParameter, optionParameter, retVal, closingParameter, lastSaleofPropertyParameter);
        }
    
        public virtual ObjectResult<AMS_Tab6_CommentsSelect_Result> AMS_Tab6_CommentsSelect(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab6_CommentsSelect_Result>("AMS_Tab6_CommentsSelect", jobIdParameter);
        }
    
        public virtual int AMS_Tab7_SalesEvidenceEdit(Nullable<long> id, Nullable<long> jobId, string address, Nullable<System.DateTime> saleDate, string salePrice, string type, string year, string construction, string roofType, string bedrooms, string bathrooms, string carAccommodation, string livingArea, string landArea, string landAreaOption, Nullable<long> createdBy, string option, ObjectParameter retVal, string imageOrFull, string imageName, string salesCategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var saleDateParameter = saleDate.HasValue ?
                new ObjectParameter("SaleDate", saleDate) :
                new ObjectParameter("SaleDate", typeof(System.DateTime));
    
            var salePriceParameter = salePrice != null ?
                new ObjectParameter("SalePrice", salePrice) :
                new ObjectParameter("SalePrice", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var constructionParameter = construction != null ?
                new ObjectParameter("Construction", construction) :
                new ObjectParameter("Construction", typeof(string));
    
            var roofTypeParameter = roofType != null ?
                new ObjectParameter("RoofType", roofType) :
                new ObjectParameter("RoofType", typeof(string));
    
            var bedroomsParameter = bedrooms != null ?
                new ObjectParameter("Bedrooms", bedrooms) :
                new ObjectParameter("Bedrooms", typeof(string));
    
            var bathroomsParameter = bathrooms != null ?
                new ObjectParameter("Bathrooms", bathrooms) :
                new ObjectParameter("Bathrooms", typeof(string));
    
            var carAccommodationParameter = carAccommodation != null ?
                new ObjectParameter("CarAccommodation", carAccommodation) :
                new ObjectParameter("CarAccommodation", typeof(string));
    
            var livingAreaParameter = livingArea != null ?
                new ObjectParameter("LivingArea", livingArea) :
                new ObjectParameter("LivingArea", typeof(string));
    
            var landAreaParameter = landArea != null ?
                new ObjectParameter("LandArea", landArea) :
                new ObjectParameter("LandArea", typeof(string));
    
            var landAreaOptionParameter = landAreaOption != null ?
                new ObjectParameter("LandAreaOption", landAreaOption) :
                new ObjectParameter("LandAreaOption", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var imageOrFullParameter = imageOrFull != null ?
                new ObjectParameter("ImageOrFull", imageOrFull) :
                new ObjectParameter("ImageOrFull", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var salesCategoryParameter = salesCategory != null ?
                new ObjectParameter("SalesCategory", salesCategory) :
                new ObjectParameter("SalesCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab7_SalesEvidenceEdit", idParameter, jobIdParameter, addressParameter, saleDateParameter, salePriceParameter, typeParameter, yearParameter, constructionParameter, roofTypeParameter, bedroomsParameter, bathroomsParameter, carAccommodationParameter, livingAreaParameter, landAreaParameter, landAreaOptionParameter, createdByParameter, optionParameter, retVal, imageOrFullParameter, imageNameParameter, salesCategoryParameter);
        }
    
        public virtual ObjectResult<AMS_Tab7_SalesEvidenceSelect_Result> AMS_Tab7_SalesEvidenceSelect(Nullable<long> id, Nullable<long> jobId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab7_SalesEvidenceSelect_Result>("AMS_Tab7_SalesEvidenceSelect", idParameter, jobIdParameter);
        }
    
        public virtual ObjectResult<string> AMS_Tab7_SalesEvidenceSelectUnique(Nullable<long> id, Nullable<long> jobId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AMS_Tab7_SalesEvidenceSelectUnique", idParameter, jobIdParameter);
        }
    
        public virtual int AMS_Tab8_AttachmentsEdit(Nullable<long> id, Nullable<long> jobId, string imageName, string imageType, Nullable<long> createdBy, string option, Nullable<int> sectionId, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var imageTypeParameter = imageType != null ?
                new ObjectParameter("ImageType", imageType) :
                new ObjectParameter("ImageType", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var sectionIdParameter = sectionId.HasValue ?
                new ObjectParameter("SectionId", sectionId) :
                new ObjectParameter("SectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_Tab8_AttachmentsEdit", idParameter, jobIdParameter, imageNameParameter, imageTypeParameter, createdByParameter, optionParameter, sectionIdParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_Tab8_AttachmentsSelect_Result> AMS_Tab8_AttachmentsSelect(Nullable<long> id, Nullable<long> jobId, string imageType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var imageTypeParameter = imageType != null ?
                new ObjectParameter("ImageType", imageType) :
                new ObjectParameter("ImageType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_Tab8_AttachmentsSelect_Result>("AMS_Tab8_AttachmentsSelect", idParameter, jobIdParameter, imageTypeParameter);
        }
    
        public virtual int AMS_TransactionTypeEdit(Nullable<long> id, string transactionTypeName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var transactionTypeNameParameter = transactionTypeName != null ?
                new ObjectParameter("TransactionTypeName", transactionTypeName) :
                new ObjectParameter("TransactionTypeName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_TransactionTypeEdit", idParameter, transactionTypeNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_TransactionTypeSelect_Result> AMS_TransactionTypeSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_TransactionTypeSelect_Result>("AMS_TransactionTypeSelect", idParameter);
        }
    
        public virtual int AMS_UrgencyEdit(Nullable<long> id, string urgencyName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var urgencyNameParameter = urgencyName != null ?
                new ObjectParameter("UrgencyName", urgencyName) :
                new ObjectParameter("UrgencyName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_UrgencyEdit", idParameter, urgencyNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_UrgencySelect_Result> AMS_UrgencySelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_UrgencySelect_Result>("AMS_UrgencySelect", idParameter);
        }
    
        public virtual ObjectResult<AMS_UsersLogin_Result> AMS_UsersLogin(string username, string password, string option)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_UsersLogin_Result>("AMS_UsersLogin", usernameParameter, passwordParameter, optionParameter);
        }
    
        public virtual int AMS_UsersLoginCreate(string username, string password, string userType, string option, ObjectParameter retVal)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_UsersLoginCreate", usernameParameter, passwordParameter, userTypeParameter, optionParameter, retVal);
        }
    
        public virtual int AMS_UsersPasswordEdit(Nullable<long> userId, string password, string option)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_UsersPasswordEdit", userIdParameter, passwordParameter, optionParameter);
        }
    
        public virtual ObjectResult<AMS_UsersSelect_Result> AMS_UsersSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_UsersSelect_Result>("AMS_UsersSelect", idParameter);
        }
    
        public virtual int AMS_ValuationCompanyBankAndLogoEdit(Nullable<long> userId, string option, ObjectParameter retVal, string companyLogo, string bankName, string bSB, string aCNumber, string aBN)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var companyLogoParameter = companyLogo != null ?
                new ObjectParameter("CompanyLogo", companyLogo) :
                new ObjectParameter("CompanyLogo", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bSBParameter = bSB != null ?
                new ObjectParameter("BSB", bSB) :
                new ObjectParameter("BSB", typeof(string));
    
            var aCNumberParameter = aCNumber != null ?
                new ObjectParameter("ACNumber", aCNumber) :
                new ObjectParameter("ACNumber", typeof(string));
    
            var aBNParameter = aBN != null ?
                new ObjectParameter("ABN", aBN) :
                new ObjectParameter("ABN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuationCompanyBankAndLogoEdit", userIdParameter, optionParameter, retVal, companyLogoParameter, bankNameParameter, bSBParameter, aCNumberParameter, aBNParameter);
        }
    
        public virtual int AMS_ValuationCompanyEdit(Nullable<long> id, Nullable<long> userId, string email, string firstName, string lastName, string companyName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string professionalIndemnityInsurancePolicy, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string option, ObjectParameter retVal, Nullable<bool> allowJobCreate, string companyLogo, string bankName, string bSB, string aCNumber, string aBN, string uRL)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var professionalIndemnityInsurancePolicyParameter = professionalIndemnityInsurancePolicy != null ?
                new ObjectParameter("ProfessionalIndemnityInsurancePolicy", professionalIndemnityInsurancePolicy) :
                new ObjectParameter("ProfessionalIndemnityInsurancePolicy", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var allowJobCreateParameter = allowJobCreate.HasValue ?
                new ObjectParameter("AllowJobCreate", allowJobCreate) :
                new ObjectParameter("AllowJobCreate", typeof(bool));
    
            var companyLogoParameter = companyLogo != null ?
                new ObjectParameter("CompanyLogo", companyLogo) :
                new ObjectParameter("CompanyLogo", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bSBParameter = bSB != null ?
                new ObjectParameter("BSB", bSB) :
                new ObjectParameter("BSB", typeof(string));
    
            var aCNumberParameter = aCNumber != null ?
                new ObjectParameter("ACNumber", aCNumber) :
                new ObjectParameter("ACNumber", typeof(string));
    
            var aBNParameter = aBN != null ?
                new ObjectParameter("ABN", aBN) :
                new ObjectParameter("ABN", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuationCompanyEdit", idParameter, userIdParameter, emailParameter, firstNameParameter, lastNameParameter, companyNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, professionalIndemnityInsurancePolicyParameter, startDateParameter, endDateParameter, optionParameter, retVal, allowJobCreateParameter, companyLogoParameter, bankNameParameter, bSBParameter, aCNumberParameter, aBNParameter, uRLParameter);
        }
    
        public virtual int AMS_ValuationCompanyHFImageEdit(Nullable<long> userId, string headerImage, string footerImage, ObjectParameter retVal)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var headerImageParameter = headerImage != null ?
                new ObjectParameter("HeaderImage", headerImage) :
                new ObjectParameter("HeaderImage", typeof(string));
    
            var footerImageParameter = footerImage != null ?
                new ObjectParameter("FooterImage", footerImage) :
                new ObjectParameter("FooterImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuationCompanyHFImageEdit", userIdParameter, headerImageParameter, footerImageParameter, retVal);
        }
    
        public virtual int AMS_ValuationCompanyOtherEdit(Nullable<long> id, Nullable<long> userId, string termsandCondition, string certificationQualification, string familyLawCertification, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var termsandConditionParameter = termsandCondition != null ?
                new ObjectParameter("TermsandCondition", termsandCondition) :
                new ObjectParameter("TermsandCondition", typeof(string));
    
            var certificationQualificationParameter = certificationQualification != null ?
                new ObjectParameter("CertificationQualification", certificationQualification) :
                new ObjectParameter("CertificationQualification", typeof(string));
    
            var familyLawCertificationParameter = familyLawCertification != null ?
                new ObjectParameter("FamilyLawCertification", familyLawCertification) :
                new ObjectParameter("FamilyLawCertification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuationCompanyOtherEdit", idParameter, userIdParameter, termsandConditionParameter, certificationQualificationParameter, familyLawCertificationParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ValuationCompanySelect_Result> AMS_ValuationCompanySelect(Nullable<long> userId, Nullable<long> createdBy, Nullable<long> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ValuationCompanySelect_Result>("AMS_ValuationCompanySelect", userIdParameter, createdByParameter, statusParameter);
        }
    
        public virtual int AMS_ValuationManagerEdit(Nullable<long> id, Nullable<long> userId, string email, string firstName, string lastName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuationManagerEdit", idParameter, userIdParameter, emailParameter, firstNameParameter, lastNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ValuationManagerSelect_Result> AMS_ValuationManagerSelect(Nullable<long> userId, Nullable<long> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ValuationManagerSelect_Result>("AMS_ValuationManagerSelect", userIdParameter, createdByParameter);
        }
    
        public virtual int AMS_ValuationTypeEdit(Nullable<long> id, string valuationTypeName, string option, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var valuationTypeNameParameter = valuationTypeName != null ?
                new ObjectParameter("ValuationTypeName", valuationTypeName) :
                new ObjectParameter("ValuationTypeName", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuationTypeEdit", idParameter, valuationTypeNameParameter, optionParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ValuationTypeSelect_Result> AMS_ValuationTypeSelect(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ValuationTypeSelect_Result>("AMS_ValuationTypeSelect", idParameter);
        }
    
        public virtual int AMS_ValuersEdit(Nullable<long> id, Nullable<long> userId, string email, string firstName, string lastName, string companyName, string address, string suburb, string state, string postcode, string phone1, string phone2, string otherDetails, string fax, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<long> status, string option, ObjectParameter retVal, Nullable<long> valuationCompanyId, string title, string qualifications, string experience, string membershipStatus, string membershipBody)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var otherDetailsParameter = otherDetails != null ?
                new ObjectParameter("OtherDetails", otherDetails) :
                new ObjectParameter("OtherDetails", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var valuationCompanyIdParameter = valuationCompanyId.HasValue ?
                new ObjectParameter("ValuationCompanyId", valuationCompanyId) :
                new ObjectParameter("ValuationCompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var qualificationsParameter = qualifications != null ?
                new ObjectParameter("Qualifications", qualifications) :
                new ObjectParameter("Qualifications", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("Experience", experience) :
                new ObjectParameter("Experience", typeof(string));
    
            var membershipStatusParameter = membershipStatus != null ?
                new ObjectParameter("MembershipStatus", membershipStatus) :
                new ObjectParameter("MembershipStatus", typeof(string));
    
            var membershipBodyParameter = membershipBody != null ?
                new ObjectParameter("MembershipBody", membershipBody) :
                new ObjectParameter("MembershipBody", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuersEdit", idParameter, userIdParameter, emailParameter, firstNameParameter, lastNameParameter, companyNameParameter, addressParameter, suburbParameter, stateParameter, postcodeParameter, phone1Parameter, phone2Parameter, otherDetailsParameter, faxParameter, createdByParameter, modifiedByParameter, statusParameter, optionParameter, retVal, valuationCompanyIdParameter, titleParameter, qualificationsParameter, experienceParameter, membershipStatusParameter, membershipBodyParameter);
        }
    
        public virtual int AMS_ValuersLogoEdit(Nullable<long> id, Nullable<long> userId, string valuerLogo, ObjectParameter retVal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var valuerLogoParameter = valuerLogo != null ?
                new ObjectParameter("ValuerLogo", valuerLogo) :
                new ObjectParameter("ValuerLogo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AMS_ValuersLogoEdit", idParameter, userIdParameter, valuerLogoParameter, retVal);
        }
    
        public virtual ObjectResult<AMS_ValuersSelect_Result> AMS_ValuersSelect(Nullable<long> userId, Nullable<long> valuationCompanyId, Nullable<long> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var valuationCompanyIdParameter = valuationCompanyId.HasValue ?
                new ObjectParameter("ValuationCompanyId", valuationCompanyId) :
                new ObjectParameter("ValuationCompanyId", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMS_ValuersSelect_Result>("AMS_ValuersSelect", userIdParameter, valuationCompanyIdParameter, statusParameter);
        }
    }
}
